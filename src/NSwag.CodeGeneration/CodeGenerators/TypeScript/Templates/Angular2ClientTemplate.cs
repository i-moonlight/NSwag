// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace NSwag.CodeGeneration.CodeGenerators.TypeScript.Templates
{
    using NJsonSchema.CodeGeneration;
    using NSwag.CodeGeneration.CodeGenerators.TypeScript;
    using System.Linq;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    internal partial class Angular2ClientTemplate : Angular2ClientTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            
            #line 6 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(Model.HasOperations){
            
            #line default
            #line hidden
            
            #line 7 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(Model.GenerateClientInterfaces){
            
            #line default
            #line hidden
            this.Write("export interface I");
            
            #line 8 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write(" {\r\n");
            
            #line 9 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var operation in Model.Operations){
            
            #line default
            #line hidden
            
            #line 10 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.HasDocumentation){
            
            #line default
            #line hidden
            this.Write("    /**\r\n");
            
            #line 11 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("     * ");
            
            #line 11 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Summary));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 12 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 12 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 13 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("     * @");
            
            #line 13 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 13 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Description ?? ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 14 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 14 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 14 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("     * @return ");
            
            #line 14 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultDescription));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 15 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 15 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("     * @deprecated\r\n");
            
            #line 16 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("     */\r\n");
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameLower));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(!parameter.IsLast){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("): Observable<");
            
            #line 17 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(">;\r\n");
            
            #line 18 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 19 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n@Injectable()\r\nexport class ");
            
            #line 22 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 22 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(Model.GenerateClientInterfaces){
            
            #line default
            #line hidden
            this.Write("implements I");
            
            #line 22 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 22 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(@"{
    private http: Http = null; 
    private baseUrl: string = undefined; 
    private jsonParseReviver: (key: string, value: any) => any = undefined; 

    constructor(@Inject(Http) http: Http, @Optional() @Inject(API_BASE_URL) baseUrl?: string, @Optional() @Inject(JSON_PARSE_REVIVER) jsonParseReviver?: (key: string, value: any) => any) {
        this.http = http; 
        this.baseUrl = baseUrl ? baseUrl : """);
            
            #line 29 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseUrl));
            
            #line default
            #line hidden
            this.Write("\"; \r\n        this.jsonParseReviver = jsonParseReviver;\r\n    }\r\n");
            
            #line 32 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(Model.IsExtended){
            
            #line default
            #line hidden
            this.Write("\r\n    protected transformOptions(options: RequestOptionsArgs) {\r\n        return o" +
                    "ptions; \r\n    }\r\n\r\n    protected transformResult(url: string, response: Response" +
                    ", processor: (response: Response) => any) {\r\n        return processor(response);" +
                    "\r\n    }\r\n");
            
            #line 41 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 42 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var operation in Model.Operations){
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 44 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.HasDocumentation){
            
            #line default
            #line hidden
            this.Write("    /**\r\n");
            
            #line 45 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("     * ");
            
            #line 45 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Summary));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 46 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 46 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 47 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("     * @");
            
            #line 47 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 47 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Description ?? ""));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 48 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 48 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 48 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("     * @return ");
            
            #line 48 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultDescription));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 49 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 49 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("     * @deprecated\r\n");
            
            #line 50 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("     */\r\n");
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameLower));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(!parameter.IsLast){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("): Observable<");
            
            #line 51 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write("> {\r\n        var url = this.baseUrl + \"/");
            
            #line 52 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Path));
            
            #line default
            #line hidden
            
            #line 52 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.QueryParameters.Any()){
            
            #line default
            #line hidden
            this.Write("?");
            
            #line 52 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\"; \r\n\r\n");
            
            #line 54 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var parameter in operation.PathParameters){
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 55 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" === undefined || ");
            
            #line 55 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" === null)\r\n            throw new Error(\"The parameter \'");
            
            #line 56 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\' must be defined.\");\r\n");
            
            #line 57 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  if(parameter.IsDateArray){
            
            #line default
            #line hidden
            this.Write("        url = url.replace(\"{");
            
            #line 58 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", encodeURIComponent(");
            
            #line 58 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".map(s_ => s_.toJSON()).join())); \r\n");
            
            #line 59 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else if(parameter.IsDate){
            
            #line default
            #line hidden
            this.Write("        url = url.replace(\"{");
            
            #line 60 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", encodeURIComponent(\"\" + ");
            
            #line 60 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".toJSON())); \r\n");
            
            #line 61 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else if(parameter.IsArray){
            
            #line default
            #line hidden
            this.Write("        url = url.replace(\"{");
            
            #line 62 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", encodeURIComponent(");
            
            #line 62 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".join())); \r\n");
            
            #line 63 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("        url = url.replace(\"{");
            
            #line 64 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", encodeURIComponent(\"\" + ");
            
            #line 64 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(")); \r\n");
            
            #line 65 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 66 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 68 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var parameter in operation.QueryParameters){
            
            #line default
            #line hidden
            
            #line 69 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  if (parameter.IsRequired) { 
        if(parameter.IsNullable){
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 71 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" === undefined)\r\n            throw new Error(\"The parameter \'");
            
            #line 72 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\' must be defined.\");\r\n        else\r\n");
            
            #line 74 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 75 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" === undefined || ");
            
            #line 75 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" === null)\r\n            throw new Error(\"The parameter \'");
            
            #line 76 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\' must be defined and cannot be null.\");\r\n        else\r\n");
            
            #line 78 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      }
    }else{
        if(parameter.IsNullable){
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 81 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" !== undefined)\r\n");
            
            #line 82 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 83 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" === null)\r\n            throw new Error(\"The parameter \'");
            
            #line 84 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\' cannot be null.\");\r\n        else if (");
            
            #line 85 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" !== undefined)\r\n");
            
            #line 86 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      }
    }
            
            #line default
            #line hidden
            
            #line 88 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  if(parameter.IsDateArray){
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 89 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".forEach(item => { url += \"");
            
            #line 89 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("=\" + encodeURIComponent(\"\" + item.toJSON()) + \"&\"; });\r\n");
            
            #line 90 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else if(parameter.IsDate){
            
            #line default
            #line hidden
            this.Write("            url += \"");
            
            #line 91 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("=\" + encodeURIComponent(\"\" + ");
            
            #line 91 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".toJSON()) + \"&\"; \r\n");
            
            #line 92 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else if(parameter.IsArray){
            
            #line default
            #line hidden
            this.Write("            ");
            
            #line 93 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".forEach(item => { url += \"");
            
            #line 93 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("=\" + encodeURIComponent(\"\" + item) + \"&\"; });\r\n");
            
            #line 94 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("            url += \"");
            
            #line 95 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("=\" + encodeURIComponent(\"\" + ");
            
            #line 95 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(") + \"&\"; \r\n");
            
            #line 96 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }
}
            
            #line default
            #line hidden
            this.Write("\r\n        ");
            
            #line 99 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RequestBodyGenerator.Render(operation.ContentParameter, 2)));
            
            #line default
            #line hidden
            this.Write("\r\n        \r\n        return this.http.request(url, ");
            
            #line 101 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(Model.IsExtended){
            
            #line default
            #line hidden
            this.Write("this.transformOptions(");
            
            #line 101 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("{\r\n            body: content,\r\n            method: \"");
            
            #line 103 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.HttpMethodLower));
            
            #line default
            #line hidden
            this.Write("\",\r\n            headers: new Headers({\r\n");
            
            #line 105 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var parameter in operation.HeaderParameters){
            
            #line default
            #line hidden
            this.Write("                \"");
            
            #line 106 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\": ");
            
            #line 106 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(", \r\n");
            
            #line 107 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("                \"Content-Type\": \"application/json; charset=UTF-8\"\r\n            })" +
                    "\r\n        }");
            
            #line 109 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(Model.IsExtended){
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 109 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(").map((response) => {\r\n");
            
            #line 110 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(Model.IsExtended){
            
            #line default
            #line hidden
            this.Write("            return this.transformResult(url, response, (response) => this.process" +
                    "");
            
            #line 111 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("(response));\r\n");
            
            #line 112 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            this.Write("            return this.process");
            
            #line 113 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("(response);\r\n");
            
            #line 114 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("        });\r\n    }\r\n\r\n    private process");
            
            #line 118 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("(response: Response) {\r\n        var data = response.text();\r\n        var status =" +
                    " response.status.toString(); \r\n\r\n");
            
            #line 122 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
foreach(var response in operation.Responses){
            
            #line default
            #line hidden
            this.Write("        if (status === \"");
            
            #line 123 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write("\") {\r\n");
            
            #line 124 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(response.HasType){
            
            #line default
            #line hidden
            this.Write("            var result");
            
            #line 125 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 125 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write(" = null; \r\n");
            
            #line 126 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  if(response.IsDate){
            
            #line default
            #line hidden
            this.Write("            result");
            
            #line 127 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write(" = new Date(data);\r\n");
            
            #line 128 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            
            #line 129 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      if(response.UseDtoClass){
            
            #line default
            #line hidden
            this.Write("            var resultData");
            
            #line 130 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write(" = data === \"\" ? null : JSON.parse(data, this.jsonParseReviver);\r\n            ");
            
            #line 131 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.Tab(response.DataConversionCode, 3)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 132 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("            result");
            
            #line 133 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write(" = data === \"\" ? null : <");
            
            #line 133 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write(">JSON.parse(data, this.jsonParseReviver);\r\n");
            
            #line 134 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            
            #line 135 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 136 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  if(response.IsSuccess){
            
            #line default
            #line hidden
            this.Write("            return result");
            
            #line 137 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write("; \r\n");
            
            #line 138 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("            throw result");
            
            #line 139 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write("; \r\n");
            
            #line 140 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }
}
            
            #line default
            #line hidden
            this.Write("        }\r\n        else\r\n");
            
            #line 144 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("        {\r\n");
            
            #line 145 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
if(operation.HasDefaultResponse){
            
            #line default
            #line hidden
            this.Write("            var result: ");
            
            #line 146 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.Type));
            
            #line default
            #line hidden
            this.Write(" = null; \r\n");
            
            #line 147 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  if(operation.DefaultResponse.IsDate){
            
            #line default
            #line hidden
            this.Write("            result = new Date(data);\r\n");
            
            #line 149 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            
            #line 150 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      if(operation.DefaultResponse.UseDtoClass){
            
            #line default
            #line hidden
            this.Write("            var resultData = data === \"\" ? null : JSON.parse(data, this.jsonParse" +
                    "Reviver);\r\n            ");
            
            #line 152 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.Tab(operation.DefaultResponse.DataConversionCode, 3)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 153 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("            result = data === \"\" ? null : <");
            
            #line 154 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.Type));
            
            #line default
            #line hidden
            this.Write(">JSON.parse(data, this.jsonParseReviver);\r\n");
            
            #line 155 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            
            #line 156 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 157 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  if(operation.DefaultResponse.IsSuccess){
            
            #line default
            #line hidden
            this.Write("            return result; \r\n");
            
            #line 159 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("            throw result; \r\n");
            
            #line 161 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
  }
}else{
            
            #line default
            #line hidden
            this.Write("            throw \"error_no_callback_for_the_received_http_status\"; \r\n");
            
            #line 164 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("        }\r\n    }\r\n");
            
            #line 167 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 168 "C:\projects\Own\Forked\NSwag\src\NSwag.CodeGeneration\CodeGenerators\TypeScript\Templates\Angular2ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    internal class Angular2ClientTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
