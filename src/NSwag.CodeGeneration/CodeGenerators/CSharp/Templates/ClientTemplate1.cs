// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace NSwag.CodeGeneration.CodeGenerators.CSharp.Templates
{
    using NJsonSchema.CodeGeneration;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    internal partial class ClientTemplate : ClientTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 4 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(Model.HasOperations){
            
            #line default
            #line hidden
            
            #line 5 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(Model.GenerateContracts && Model.GenerateClientInterfaces){
            
            #line default
            #line hidden
            this.Write("public partial interface I");
            
            #line 6 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 8 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var operation in Model.Operations){
            
            #line default
            #line hidden
            
            #line 9 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("    /// <summary>");
            
            #line 9 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.Summary, 1)));
            
            #line default
            #line hidden
            this.Write("</summary>\r\n");
            
            #line 10 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }foreach (var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 11 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"");
            
            #line 11 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 11 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(parameter.Description, 1)));
            
            #line default
            #line hidden
            this.Write("</param>\r\n");
            
            #line 12 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }}if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("    /// <returns>");
            
            #line 12 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.ResultDescription, 1)));
            
            #line default
            #line hidden
            this.Write("</returns>\r\n");
            
            #line 13 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// <exception cref=\"SwaggerException\">A server side error occurred.</excepti" +
                    "on>\r\n");
            
            #line 14 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("    [Obsolete]\r\n");
            
            #line 15 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 15 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 15 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 15 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 15 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 15 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            
            #line 15 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(!parameter.IsLast){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 15 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}}
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n");
            
            #line 17 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("    /// <summary>");
            
            #line 17 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.Summary, 1)));
            
            #line default
            #line hidden
            this.Write("</summary>\r\n");
            
            #line 18 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }foreach (var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 19 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"");
            
            #line 19 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 19 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(parameter.Description, 1)));
            
            #line default
            #line hidden
            this.Write("</param>\r\n");
            
            #line 20 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }}
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"cancellationToken\">A cancellation token that can be used by " +
                    "other objects or threads to receive notice of cancellation.</param>\r\n");
            
            #line 21 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("    /// <returns>");
            
            #line 21 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.ResultDescription, 1)));
            
            #line default
            #line hidden
            this.Write("</returns>\r\n");
            
            #line 22 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// <exception cref=\"SwaggerException\">A server side error occurred.</excepti" +
                    "on>\r\n");
            
            #line 23 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("    [Obsolete]\r\n");
            
            #line 24 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 24 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 24 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 24 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 24 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 24 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 24 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("CancellationToken cancellationToken);\r\n\r\n");
            
            #line 26 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 28 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 30 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(Model.GenerateImplementation){
            
            #line default
            #line hidden
            this.Write("public partial class ");
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(Model.HasBaseType){
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(Model.HasBaseClass){
            
            #line default
            #line hidden
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass));
            
            #line default
            #line hidden
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(Model.GenerateClientInterfaces){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(Model.GenerateClientInterfaces){
            
            #line default
            #line hidden
            this.Write("I");
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            
            #line 31 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public ");
            
            #line 34 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write("() : this(\"");
            
            #line 34 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseUrl));
            
            #line default
            #line hidden
            this.Write("\") { }\r\n\r\n    public ");
            
            #line 36 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write(@"(string baseUrl)
    {
        BaseUrl = baseUrl; 
    }

    partial void PrepareRequest(HttpClient request, ref string url);

    partial void ProcessResponse(HttpClient request, HttpResponseMessage response);

    public string BaseUrl { get; set; }

");
            
            #line 47 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var operation in Model.Operations){
            
            #line default
            #line hidden
            
            #line 48 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("    /// <summary>");
            
            #line 48 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.Summary, 1)));
            
            #line default
            #line hidden
            this.Write("</summary>\r\n");
            
            #line 49 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }foreach (var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 50 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"");
            
            #line 50 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 50 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(parameter.Description, 1)));
            
            #line default
            #line hidden
            this.Write("</param>\r\n");
            
            #line 51 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }}if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("    /// <returns>");
            
            #line 51 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.ResultDescription, 1)));
            
            #line default
            #line hidden
            this.Write("</returns>\r\n");
            
            #line 52 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// <exception cref=\"SwaggerException\">A server side error occurred.</excepti" +
                    "on>\r\n");
            
            #line 53 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("    [Obsolete]\r\n");
            
            #line 54 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    public ");
            
            #line 54 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 54 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 54 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 54 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 54 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            
            #line 54 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(!parameter.IsLast){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 54 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}}
            
            #line default
            #line hidden
            this.Write(")\r\n    {\r\n        return ");
            
            #line 56 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 56 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 56 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 56 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("CancellationToken.None);\r\n    }\r\n\r\n");
            
            #line 59 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("    /// <summary>");
            
            #line 59 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.Summary, 1)));
            
            #line default
            #line hidden
            this.Write("</summary>\r\n");
            
            #line 60 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }foreach (var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 61 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"");
            
            #line 61 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 61 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(parameter.Description, 1)));
            
            #line default
            #line hidden
            this.Write("</param>\r\n");
            
            #line 62 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }}
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"cancellationToken\">A cancellation token that can be used by " +
                    "other objects or threads to receive notice of cancellation.</param>\r\n");
            
            #line 63 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("    /// <returns>");
            
            #line 63 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.ResultDescription, 1)));
            
            #line default
            #line hidden
            this.Write("</returns>\r\n");
            
            #line 64 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// <exception cref=\"SwaggerException\">A server side error occurred.</excepti" +
                    "on>\r\n");
            
            #line 65 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("    [Obsolete]\r\n");
            
            #line 66 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    public async ");
            
            #line 66 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 66 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 66 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 66 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 66 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 66 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("CancellationToken cancellationToken)\r\n    {\r\n        var url_ = string.Format(\"{0" +
                    "}/{1}?\", BaseUrl, \"");
            
            #line 68 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Path));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 69 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.PathParameters){
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 70 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            throw new ArgumentNullException(\"");
            
            #line 71 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n");
            
            #line 73 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(parameter.IsDateArray){
            
            #line default
            #line hidden
            this.Write("        url_ = url_.Replace(\"{");
            
            #line 74 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", Uri.EscapeUriString(string.Join(\",\", ");
            
            #line 74 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".Select(s_ => s_.ToString(\"s\", CultureInfo.InvariantCulture)))));\r\n");
            
            #line 75 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else if(parameter.IsDate){
            
            #line default
            #line hidden
            this.Write("        url_ = url_.Replace(\"{");
            
            #line 76 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", Uri.EscapeUriString(");
            
            #line 76 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".ToString(\"s\", CultureInfo.InvariantCulture)));\r\n");
            
            #line 77 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else if(parameter.IsArray){
            
            #line default
            #line hidden
            this.Write("        url_ = url_.Replace(\"{");
            
            #line 78 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", Uri.EscapeUriString(string.Join(\",\", ");
            
            #line 78 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".Select(s_ => s_.ToString()))));\r\n");
            
            #line 79 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("        url_ = url_.Replace(\"{");
            
            #line 80 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", Uri.EscapeUriString(");
            
            #line 80 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".ToString()));\r\n");
            
            #line 81 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 82 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 84 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.QueryParameters){
            
            #line default
            #line hidden
            
            #line 85 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(!parameter.IsNullable){
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 86 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            throw new ArgumentNullException(\"");
            
            #line 87 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 88 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 89 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(parameter.IsDateArray){
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 90 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" != null)\r\n            foreach(var item_ in ");
            
            #line 91 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(") { url_ += string.Format(\"");
            
            #line 91 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("={0}&\", Uri.EscapeUriString(item_.ToString(\"s\", CultureInfo.InvariantCulture))); " +
                    "}\r\n");
            
            #line 92 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else if(parameter.IsDate){
            
            #line default
            #line hidden
            this.Write("        url_ += string.Format(\"");
            
            #line 93 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("={0}&\", Uri.EscapeUriString(");
            
            #line 93 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" != null ? ");
            
            #line 93 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            
            #line 93 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(parameter.Type.EndsWith("?")){
            
            #line default
            #line hidden
            this.Write(".Value");
            
            #line 93 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(".ToString(\"s\", CultureInfo.InvariantCulture) : \"null\"));\r\n");
            
            #line 94 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else if(parameter.IsArray){
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 95 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" != null)\r\n            foreach(var item_ in ");
            
            #line 96 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(") { url_ += string.Format(\"");
            
            #line 96 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("={0}&\", Uri.EscapeUriString(item_.ToString())); }\r\n");
            
            #line 97 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("        url_ += string.Format(\"");
            
            #line 98 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("={0}&\", Uri.EscapeUriString(");
            
            #line 98 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" != null ? ");
            
            #line 98 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            
            #line 98 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(parameter.Type.EndsWith("?")){
            
            #line default
            #line hidden
            this.Write(".Value");
            
            #line 98 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(".ToString() : \"null\"));\r\n");
            
            #line 99 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
}
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 101 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      if(Model.UseHttpClientCreationMethod){
            
            #line default
            #line hidden
            this.Write("        var client_ = await CreateHttpClientAsync(cancellationToken).ConfigureAwa" +
                    "it(false);\r\n");
            
            #line 103 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("        var client_ = new HttpClient();\r\n");
            
            #line 105 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("        PrepareRequest(client_, ref url_);\r\n");
            
            #line 107 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.HeaderParameters){
            
            #line default
            #line hidden
            this.Write("        client_.DefaultRequestHeaders.TryAddWithoutValidation(\"");
            
            #line 108 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 108 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 109 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 111 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(operation.HasContent){
            
            #line default
            #line hidden
            this.Write("        var content_ = new StringContent(JsonConvert.SerializeObject(");
            
            #line 112 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ContentParameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("));\r\n        content_.Headers.ContentType.MediaType = \"application/json\";\r\n\r\n    " +
                    "    var response_ = await client_.");
            
            #line 115 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.HttpMethodUpper));
            
            #line default
            #line hidden
            this.Write("Async(url_, content_, cancellationToken).ConfigureAwait(false);\r\n        ProcessR" +
                    "esponse(client_, response_);\r\n");
            
            #line 117 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            
            #line 118 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.IsGetOrDelete){
            
            #line default
            #line hidden
            this.Write("        var response_ = await client_.");
            
            #line 119 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.HttpMethodUpper));
            
            #line default
            #line hidden
            this.Write("Async(url_, cancellationToken).ConfigureAwait(false);\r\n");
            
            #line 120 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            
            #line 121 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasFormParameters){
            
            #line default
            #line hidden
            this.Write("        var content_ = new MultipartFormDataContent();\r\n");
            
            #line 123 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.FormParameters){
            
            #line default
            #line hidden
            
            #line 124 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(parameter.IsNullable){
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 125 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" != null)\r\n");
            
            #line 126 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("        if (");
            
            #line 127 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(" == null)\r\n            throw new ArgumentNullException(\"");
            
            #line 128 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("\");\r\n        else\r\n");
            
            #line 130 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 131 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(parameter.IsFile){
            
            #line default
            #line hidden
            this.Write("            content_.Add(new StreamContent(");
            
            #line 132 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write("), \"");
            
            #line 132 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 133 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("            content_.Add(new StringContent(");
            
            #line 134 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableNameLower));
            
            #line default
            #line hidden
            this.Write(".ToString()), \"");
            
            #line 134 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 135 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 136 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 137 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("        var content_ = new StringContent(string.Empty);\r\n");
            
            #line 139 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("        \r\n        var response_ = await client_.");
            
            #line 141 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.HttpMethodUpper));
            
            #line default
            #line hidden
            this.Write("Async(url_, content_, cancellationToken).ConfigureAwait(false);\r\n");
            
            #line 142 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("        ProcessResponse(client_, response_);\r\n");
            
            #line 144 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n        var responseData_ = await response_.Content.ReadAsByteArrayAsync().Conf" +
                    "igureAwait(false); \r\n        var status_ = ((int)response_.StatusCode).ToString(" +
                    ");\r\n\r\n");
            
            #line 149 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
foreach(var response in operation.Responses){
            
            #line default
            #line hidden
            this.Write("        if (status_ == \"");
            
            #line 150 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write("\") \r\n        {\r\n");
            
            #line 152 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(response.HasType){
            
            #line default
            #line hidden
            
            #line 153 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(response.IsFile){
            
            #line default
            #line hidden
            
            #line 154 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      if(response.IsSuccess){
            
            #line default
            #line hidden
            this.Write("            return responseData_; \r\n");
            
            #line 156 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("            throw new SwaggerException<byte[]>(\"A server side error occurred.\", s" +
                    "tatus_, responseData_, responseData_, null);\r\n");
            
            #line 158 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            
            #line 159 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("            var result_ = default(");
            
            #line 160 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write("); \r\n            try\r\n            {\r\n                if (responseData_.Length > 0" +
                    ")\r\n                    result_ = JsonConvert.DeserializeObject<");
            
            #line 164 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write(">(Encoding.UTF8.GetString(responseData_));                                \r\n");
            
            #line 165 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      if(response.IsSuccess){
            
            #line default
            #line hidden
            this.Write("                return result_; \r\n            } \r\n            catch (Exception ex" +
                    "ception) \r\n            {\r\n                throw new SwaggerException(\"Could not " +
                    "deserialize the response body.\", status_, responseData_, exception);\r\n          " +
                    "  }\r\n");
            
            #line 172 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("            } \r\n            catch (Exception exception) \r\n            {\r\n        " +
                    "        throw new SwaggerException(\"Could not deserialize the response body.\", s" +
                    "tatus_, responseData_, exception);\r\n            }\r\n");
            
            #line 178 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
          if(response.TypeInheritsFromException){
            
            #line default
            #line hidden
            this.Write("            if (result_ == null)\r\n                result_ = new ");
            
            #line 180 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write("();\r\n            result_.Data.Add(\"HttpStatus\", status_);\r\n            result_.Da" +
                    "ta.Add(\"ResponseData\", Encoding.UTF8.GetString(responseData_));\r\n            thr" +
                    "ow result_;\r\n");
            
            #line 184 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
          }else{
            
            #line default
            #line hidden
            this.Write("            throw new SwaggerException<");
            
            #line 185 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write(">(\"A server side error occurred.\", status_, responseData_, result_, null);\r\n");
            
            #line 186 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
          }
            
            #line default
            #line hidden
            
            #line 187 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            
            #line 188 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            
            #line 189 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            
            #line 190 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasResultType){
            
            #line default
            #line hidden
            this.Write("            return default(");
            
            #line 191 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType.Substring(5, operation.ResultType.Length - 6)));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 192 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("            return;     \r\n");
            
            #line 194 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 195 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("        }\r\n        else\r\n");
            
            #line 198 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("        {\r\n");
            
            #line 200 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
if(operation.HasDefaultResponse){
            
            #line default
            #line hidden
            this.Write("            var result_ = default(");
            
            #line 201 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.Type));
            
            #line default
            #line hidden
            this.Write("); \r\n            try\r\n            {\r\n                if (responseData_.Length > 0" +
                    ")\r\n                    result_ = JsonConvert.DeserializeObject<");
            
            #line 205 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.Type));
            
            #line default
            #line hidden
            this.Write(">(Encoding.UTF8.GetString(responseData_));\r\n\r\n");
            
            #line 207 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  if(operation.HasOnlyDefaultResponse){
            
            #line default
            #line hidden
            this.Write("                if (status_.Length == 3 && status_.StartsWith(\"2\"))\r\n            " +
                    "        return result_;\r\n");
            
            #line 210 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("            } \r\n            catch (Exception exception_) \r\n            {\r\n       " +
                    "         throw new SwaggerException(\"Could not deserialize the response body.\", " +
                    "status_, responseData_, exception_);\r\n            }\r\n\r\n            throw new Swa" +
                    "ggerException<");
            
            #line 217 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.Type));
            
            #line default
            #line hidden
            this.Write(">(\"A server side error occurred.\", status_, responseData_, result_, null);\r\n");
            
            #line 218 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("        }\r\n\r\n        throw new SwaggerException(\"The HTTP status code of the resp" +
                    "onse was not expected (\" + (int)response_.StatusCode + \").\", status_, responseDa" +
                    "ta_, null);\r\n    }\r\n\r\n");
            
            #line 224 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 226 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 227 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration\CodeGenerators\CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    internal class ClientTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
