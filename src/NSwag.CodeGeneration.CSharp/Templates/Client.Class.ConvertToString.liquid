{%              if GenerateNullableReferenceTypes -%}
private string? ConvertToString(object? value, System.Globalization.CultureInfo cultureInfo)
{%              else -%}
private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
{%              endif -%}
{
    if (value is System.Enum)
    {
        var name = System.Enum.GetName(value.GetType(), value);
        if (name != null)
        {
            var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
            if (field != null)
            {
                var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute)) 
                    as System.Runtime.Serialization.EnumMemberAttribute;
                if (attribute != null)
                {
                    return attribute.Value != null ? attribute.Value : name;
                }
            }

            return System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
        }
    }
    else if (value is bool) 
    {
        return System.Convert.ToString(value, cultureInfo)?.ToLowerInvariant();
    }
    else if (value is byte[])
    {
        return System.Convert.ToBase64String((byte[]) value);
    }
    else if (value != null && value.GetType().IsArray)
    {
        var array = System.Linq.Enumerable.OfType<object>((System.Array) value);
        return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
    }

    return System.Convert.ToString(value, cultureInfo);
}
