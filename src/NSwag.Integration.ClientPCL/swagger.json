{
  "x-generator": "NSwag v11.4.3.0 (NJsonSchema v9.4.10.0)",
  "info": {
    "title": "Web API Swagger specification",
    "version": "1.0.0"
  },
  "host": "localhost:13452",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/Geo/FromBodyTest": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_FromBodyTest",
        "parameters": [
          {
            "name": "location",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GeoPoint"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/Geo/FromUriTest": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_FromUriTest",
        "parameters": [
          {
            "type": "number",
            "name": "Latitude",
            "in": "query",
            "x-nullable": false,
            "format": "double"
          },
          {
            "type": "number",
            "name": "Longitude",
            "in": "query",
            "x-nullable": false,
            "format": "double"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/Geo/AddPolygon": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_AddPolygon",
        "parameters": [
          {
            "name": "points",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeoPoint"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/Geo/Filter": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_Filter",
        "parameters": [
          {
            "type": "array",
            "name": "currentStates",
            "in": "query",
            "x-nullable": true,
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/Geo/Reverse": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_Reverse",
        "parameters": [
          {
            "type": "array",
            "name": "values",
            "in": "query",
            "x-nullable": true,
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Geo/Refresh": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_Refresh",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/Geo/UploadFile": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_UploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            },
            "x-nullable": false
          }
        }
      }
    },
    "/api/Geo/UploadFiles": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_UploadFiles",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "files",
            "in": "formData",
            "x-nullable": true,
            "collectionFormat": "multi",
            "items": {
              "type": "file"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/Geo/SaveItems": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_SaveItems",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GenericRequestOfAddressAndPerson"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "450": {
            "description": "A custom error occured.",
            "schema": {
              "$ref": "#/definitions/Exception"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Geo/GetUploadedFile/{id}": {
      "get": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_GetUploadedFile",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "int32"
          },
          {
            "type": "boolean",
            "name": "override",
            "in": "query",
            "x-nullable": false,
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "file"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Geo/PostDouble": {
      "post": {
        "tags": [
          "Geo"
        ],
        "operationId": "Geo_PostDouble",
        "parameters": [
          {
            "type": "number",
            "name": "value",
            "in": "query",
            "x-nullable": true,
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Persons": {
      "get": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_GetAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            },
            "x-nullable": true
          }
        }
      },
      "post": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Add",
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/Persons/find/{gender}": {
      "post": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Find",
        "parameters": [
          {
            "type": "string",
            "name": "gender",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gender"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Persons/find2": {
      "post": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_FindOptional",
        "parameters": [
          {
            "type": "string",
            "name": "gender",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Gender"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Persons/{id}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Get",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "guid"
          }
        ],
        "responses": {
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PersonNotFoundException"
            },
            "x-nullable": true
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "x-nullable": true
          }
        }
      },
      "delete": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "format": "guid"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/api/Persons/transform": {
      "post": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Transform",
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Persons/Throw": {
      "post": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Throw",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "query",
            "required": true,
            "x-nullable": false,
            "format": "guid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "x-nullable": true
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PersonNotFoundException"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Persons/{id}/Name": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Gets the name of a person.",
        "operationId": "Persons_GetName",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "description": "The person ID.",
            "format": "guid"
          }
        ],
        "responses": {
          "200": {
            "description": "The person's name.",
            "schema": {
              "type": "string"
            },
            "x-nullable": true
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PersonNotFoundException"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Persons/AddXml": {
      "post": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_AddXml",
        "consumes": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            },
            "x-nullable": true
          }
        }
      }
    },
    "/api/Persons/upload": {
      "post": {
        "tags": [
          "Persons"
        ],
        "operationId": "Persons_Upload",
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "byte"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string",
              "format": "byte"
            },
            "x-nullable": true
          }
        }
      }
    }
  },
  "definitions": {
    "GeoPoint": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "Latitude",
        "Longitude"
      ],
      "properties": {
        "Latitude": {
          "type": "number",
          "format": "double"
        },
        "Longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GenericRequestOfAddressAndPerson": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Item1": {
          "$ref": "#/definitions/Address"
        },
        "Item2": {
          "$ref": "#/definitions/Person"
        }
      }
    },
    "Address": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "IsPrimary"
      ],
      "properties": {
        "IsPrimary": {
          "type": "boolean"
        },
        "City": {
          "type": "string"
        }
      }
    },
    "Person": {
      "type": "object",
      "discriminator": "discriminator",
      "additionalProperties": false,
      "required": [
        "Id",
        "FirstName",
        "LastName",
        "Gender",
        "DateOfBirth",
        "Weight",
        "Height",
        "Age",
        "AverageSleepTime",
        "Address",
        "Children",
        "discriminator"
      ],
      "properties": {
        "Id": {
          "type": "string",
          "format": "guid"
        },
        "FirstName": {
          "type": "string",
          "description": "Gets or sets the first name.",
          "minLength": 2
        },
        "LastName": {
          "type": "string",
          "description": "Gets or sets the last name."
        },
        "Gender": {
          "$ref": "#/definitions/Gender"
        },
        "DateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "Weight": {
          "type": "number",
          "format": "decimal"
        },
        "Height": {
          "type": "number",
          "format": "double"
        },
        "Age": {
          "type": "integer",
          "format": "int32",
          "maximum": 99.0,
          "minimum": 5.0
        },
        "AverageSleepTime": {
          "type": "string",
          "format": "time-span"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "Skills": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SkillLevel"
          }
        },
        "discriminator": {
          "type": "string"
        }
      }
    },
    "Gender": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Male",
        "Female"
      ],
      "enum": [
        "Male",
        "Female"
      ]
    },
    "SkillLevel": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Low",
        "Medium",
        "Height"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "Teacher": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "SkillLevel"
      ],
      "properties": {
        "Course": {
          "type": "string"
        },
        "SkillLevel": {
          "$ref": "#/definitions/SkillLevel",
          "default": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Person"
        }
      ]
    },
    "Exception": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Message": {
          "type": "string"
        },
        "InnerException": {
          "$ref": "#/definitions/Exception"
        },
        "StackTrace": {
          "type": "string"
        },
        "Source": {
          "type": "string"
        }
      }
    },
    "PersonNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "guid"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Exception"
        }
      ]
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "http://swagger.io/api/oauth/dialog",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    }
  }
}