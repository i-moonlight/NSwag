<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NSwag.AssemblyLoader</name>
    </assembly>
    <members>
        <member name="M:NSwag.CodeGeneration.Infrastructure.AppDomainIsolation`1.#ctor(System.String,System.String)">
            <exception cref="T:System.ArgumentNullException"><paramref name="assemblyDirectory"/> is <see langword="null" />.</exception>
        </member>
        <member name="T:NSwag.Commands.AssemblyTypeToSwaggerCommand">
            <summary></summary>
            <seealso cref="T:NSwag.Commands.AssemblyTypeToSwaggerCommandBase" />
        </member>
        <member name="M:NSwag.Commands.AssemblyTypeToSwaggerCommand.CreateGenerator">
            <summary>Creates a new generator instance.</summary>
            <returns>The generator.</returns>
        </member>
        <member name="T:NSwag.Commands.Documents.CreateDocumentCommand">
            <summary>Creates a new document.</summary>
        </member>
        <member name="M:NSwag.Commands.Documents.CreateDocumentCommand.CreateDocumentAsync(System.String)">
            <summary>Creates a new document in the given path.</summary>
            <param name="filePath">The file path.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:NSwag.Commands.Documents.ExecuteDocumentCommand">
            <summary>Executes a document.</summary>
        </member>
        <member name="M:NSwag.Commands.Documents.ExecuteDocumentCommand.LoadDocumentAsync(System.String)">
            <summary>Loads an existing NSwagDocument.</summary>
            <param name="filePath">The file path.</param>
            <returns>The document.</returns>
        </member>
        <member name="T:NSwag.Commands.WebApiToSwaggerCommand">
            <summary></summary>
            <seealso cref="T:NSwag.Commands.WebApiToSwaggerCommandBase" />
        </member>
        <member name="M:NSwag.Commands.WebApiToSwaggerCommand.CreateGenerator">
            <summary>Creates a new generator instance.</summary>
            <returns>The generator.</returns>
        </member>
        <member name="T:NSwag.Commands.NSwagDocument">
            <summary>The NSwagDocument implementation.</summary>
            <seealso cref="T:NSwag.Commands.NSwagDocumentBase" />
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.#ctor">
            <summary>Initializes a new instance of the <see cref="T:NSwag.Commands.NSwagDocument"/> class.</summary>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.Create">
            <summary>Creates a new NSwagDocument.</summary>
            <returns>The document.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.LoadAsync(System.String)">
            <summary>Loads an existing NSwagDocument.</summary>
            <param name="filePath">The file path.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.ConvertToAbsolutePath(System.String)">
            <summary>Converts to absolute path.</summary>
            <param name="pathToConvert">The path to convert.</param>
            <returns></returns>
        </member>
        <member name="M:NSwag.Commands.NSwagDocument.ConvertToRelativePath(System.String)">
            <summary>Converts a path to an relative path.</summary>
            <param name="pathToConvert">The path to convert.</param>
            <returns>The relative path.</returns>
        </member>
        <member name="T:NSwag.SwaggerGeneration.AssemblyTypeToSwaggerGenerator">
            <summary>Generates a <see cref="T:NSwag.SwaggerDocument"/> from a Web API controller or type which is located in a .NET assembly.</summary>
        </member>
        <member name="M:NSwag.SwaggerGeneration.AssemblyTypeToSwaggerGenerator.#ctor(NSwag.SwaggerGeneration.AssemblyTypeToSwaggerGeneratorSettings)">
            <summary>Initializes a new instance of the <see cref="T:NSwag.SwaggerGeneration.AssemblyTypeToSwaggerGenerator"/> class.</summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:NSwag.SwaggerGeneration.AssemblyTypeToSwaggerGenerator.GetExportedClassNames">
            <summary>Gets the available controller classes from the given assembly.</summary>
            <returns>The controller classes.</returns>
        </member>
        <member name="M:NSwag.SwaggerGeneration.AssemblyTypeToSwaggerGenerator.GenerateAsync(System.String[])">
            <summary>Generates the Swagger definition for the given classes without operations (used for class generation).</summary>
            <param name="classNames">The class names.</param>
            <returns>The Swagger definition.</returns>
        </member>
        <member name="T:NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGenerator">
            <summary>Generates a <see cref="T:NSwag.SwaggerDocument"/> from a Web API controller or type which is located in a .NET assembly.</summary>
        </member>
        <member name="M:NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGenerator.#ctor(NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGeneratorSettings)">
            <summary>Initializes a new instance of the <see cref="T:NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGenerator"/> class.</summary>
            <param name="settings">The generator settings.</param>
        </member>
        <member name="M:NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGenerator.GetControllerClasses">
            <summary>Gets the available controller classes from the given assembly.</summary>
            <returns>The controller classes.</returns>
            <exception cref="T:System.IO.FileNotFoundException">The assembly could not be found.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The assembly config file could not be found..</exception>
            <exception cref="T:System.InvalidOperationException">No assembly paths have been provided.</exception>
        </member>
        <member name="M:NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGenerator.GenerateForControllersAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Generates the Swagger definition for all controllers in the assembly.</summary>
            <param name="controllerClassNames">The controller class names.</param>
            <exception cref="T:System.InvalidOperationException">No assembly paths have been provided.</exception>
            <returns>The Swagger definition.</returns>
        </member>
        <member name="M:NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGenerator.WebApiAssemblyLoader.GenerateForControllers(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <exception cref="T:System.InvalidOperationException">No assembly paths have been provided.</exception>
        </member>
        <member name="M:NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGenerator.WebApiAssemblyLoader.GetControllerTypesAsync(System.Collections.Generic.IEnumerable{System.String},NSwag.SwaggerGeneration.WebApi.WebApiAssemblyToSwaggerGeneratorSettings)">
            <exception cref="T:System.InvalidOperationException">No assembly paths have been provided.</exception>
        </member>
        <member name="T:NSwag.SwaggerGeneration.Utilities.PathUtilities">
            <summary>Provides file path utility methods.</summary>
        </member>
        <member name="M:NSwag.SwaggerGeneration.Utilities.PathUtilities.ExpandFileWildcards(System.String)">
            <summary>Expands the given wildcards (** or *) in the path.</summary>
            <param name="path">The file path with wildcards.</param>
            <returns>All expanded file paths.</returns>
        </member>
        <member name="M:NSwag.SwaggerGeneration.Utilities.PathUtilities.ExpandFileWildcards(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Expands the given wildcards (** or *) in the paths.</summary>
            <param name="paths">The files path with wildcards.</param>
            <returns>All expanded file paths.</returns>
        </member>
        <member name="M:NSwag.SwaggerGeneration.Utilities.PathUtilities.FindWildcardMatches(System.String,System.Collections.Generic.IEnumerable{System.String},System.Char)">
            <summary>Finds the wildcard matches.</summary>
            <param name="selector">The selector.</param>
            <param name="items">The items.</param>
            <param name="delimiter">The delimiter.</param>
            <returns>The matches.</returns>
        </member>
        <member name="M:NSwag.SwaggerGeneration.Utilities.PathUtilities.MakeAbsolutePath(System.String,System.String)">
            <summary>Converts a relative path to an absolute path.</summary>
            <param name="relativePath">The relative path.</param>
            <param name="relativeTo">The current directory.</param>
            <returns>The absolute path.</returns>
        </member>
        <member name="M:NSwag.SwaggerGeneration.Utilities.PathUtilities.MakeRelativePath(System.String,System.String)">
            <summary>Converts an absolute path to a relative path if possible.</summary>
            <param name="absolutePath">The absolute path.</param>
            <param name="relativeTo">The current directory.</param>
            <returns>The relative path.</returns>
            <exception cref="T:System.ArgumentException">The path of the two files doesn't have any common base.</exception>
        </member>
    </members>
</doc>
