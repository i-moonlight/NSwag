public interface I<class>Controller
{
<operations:{operation | 
<if(operation.HasSummary)>    /// \<summary><operation.Summary>\</summary><endif>
<operation.Parameters:{parameter | 
<if(parameter.HasDescription)>    /// \<param name="<parameter.VariableNameLower>"><parameter.Description>\</param><endif>}>
<if(operation.HasResultDescription)>    /// \<returns><operation.ResultDescription>\</returns><endif>
<if(operation.IsDeprecated)>    [Obsolete]
<endif>    <operation.resultType> <operation.OperationNameUpper>Async(<operation.Parameters:{parameter | <parameter.Type> <parameter.VariableNameLower><if(!parameter.isLast)>, <endif>}>);

}>
\}

public class <class>Controller : <if(hasBaseClass)><baseClass><else>ApiController<endif>
{
    private I<class>Controller _implementation; 

    public <class>Controller(I<class>Controller implementation)
    {
        _implementation = implementation; 
    \}

<operations:{operation | 
<if(operation.HasSummary)>    /// \<summary><operation.Summary>\</summary><endif>
<operation.Parameters:{parameter | 
<if(parameter.HasDescription)>    /// \<param name="<parameter.VariableNameLower>"><parameter.Description>\</param><endif>}>
<if(operation.HasResultDescription)>    /// \<returns><operation.ResultDescription>\</returns><endif>
<if(operation.IsDeprecated)>    [Obsolete]
<endif>    [Http<operation.HttpMethodUpper>, Route("<operation.Path>")]
    public <operation.resultType> <operation.OperationNameUpper>(<operation.Parameters:{parameter | <parameter.Type> <parameter.VariableNameLower><if(!parameter.isLast)>, <endif>}>)
    {
        return _implementation.<operation.OperationNameUpper>Async(<operation.Parameters:{parameter | <parameter.VariableNameLower><if(!parameter.isLast)>, <endif>}>);
    \}

}>
\}

