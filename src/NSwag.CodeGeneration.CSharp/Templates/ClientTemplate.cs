// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace NSwag.CodeGeneration.CSharp.Templates
{
    using NJsonSchema;
    using System.Linq;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    internal partial class ClientTemplate : ClientTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\n");
            this.Write("\n");
            this.Write("\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.HasOperations){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.GenerateContracts && Model.GenerateClientInterfaces){
            
            #line default
            #line hidden
            this.Write("\n[System.CodeDom.Compiler.GeneratedCode(\"NSwag\", \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SwaggerDocument.ToolchainVersion));
            
            #line default
            #line hidden
            this.Write("\")]\npublic partial interface I");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write("\n{\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var operation in Model.Operations){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("    /// <summary>");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.Summary, 1)));
            
            #line default
            #line hidden
            this.Write("</summary>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }foreach (var parameter in operation.Parameters){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(parameter.Description, 1)));
            
            #line default
            #line hidden
            this.Write("</param>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }}if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("    /// <returns>");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.ResultDescription, 1)));
            
            #line default
            #line hidden
            this.Write("</returns>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// <exception cref=\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("\">A server side error occurred.</exception>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("    [System.Obsolete]\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(!parameter.IsLast){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}}
            
            #line default
            #line hidden
            this.Write(");\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("    /// <summary>");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.Summary, 1)));
            
            #line default
            #line hidden
            this.Write("</summary>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }foreach (var parameter in operation.Parameters){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(parameter.Description, 1)));
            
            #line default
            #line hidden
            this.Write("</param>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }}
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"cancellationToken\">A cancellation token that can be used by " +
                    "other objects or threads to receive notice of cancellation.</param>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("    /// <returns>");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.ResultDescription, 1)));
            
            #line default
            #line hidden
            this.Write("</returns>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// <exception cref=\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("\">A server side error occurred.</exception>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("    [System.Obsolete]\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("System.Threading.CancellationToken cancellationToken);\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n}\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.GenerateImplementation){
            
            #line default
            #line hidden
            this.Write("\n[System.CodeDom.Compiler.GeneratedCode(\"NSwag\", \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(SwaggerDocument.ToolchainVersion));
            
            #line default
            #line hidden
            this.Write("\")]\npublic partial class ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.HasBaseType){
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.HasBaseClass){
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseClass));
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.GenerateClientInterfaces){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.GenerateClientInterfaces){
            
            #line default
            #line hidden
            this.Write("I");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n\n{\n    private string _baseUrl = \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.BaseUrl));
            
            #line default
            #line hidden
            this.Write("\";\n    \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write("\n    private System.Net.Http.HttpClient _httpClient; \n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.HasConfigurationClass){
            
            #line default
            #line hidden
            this.Write("\n    public ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ConfigurationClass));
            
            #line default
            #line hidden
            this.Write(" configuration");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write(", System.Net.Http.HttpClient httpClient");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(") : base(configuration)\n    {\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write("\n        _httpClient = httpClient; \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n    }\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}else if(string.IsNullOrEmpty(Model.BaseUrl)){
            
            #line default
            #line hidden
            this.Write("\n    public ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write("(string baseUrl");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write(", System.Net.Http.HttpClient httpClient");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(")\n    {\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write("\n        _httpClient = httpClient; \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n        BaseUrl = baseUrl; \n    }\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}else if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write("\n    public ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Class));
            
            #line default
            #line hidden
            this.Write("(System.Net.Http.HttpClient httpClient)\n    {\n        _httpClient = httpClient; \n" +
                    "    }\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(@"
    public string BaseUrl 
    {
        get { return _baseUrl; }
        set { _baseUrl = value; }
    }

    partial void PrepareRequest(System.Net.Http.HttpClient request, ref string url);

    partial void ProcessResponse(System.Net.Http.HttpClient request, System.Net.Http.HttpResponseMessage response);

");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var operation in Model.Operations){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("    /// <summary>");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.Summary, 1)));
            
            #line default
            #line hidden
            this.Write("</summary>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }foreach (var parameter in operation.Parameters){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(parameter.Description, 1)));
            
            #line default
            #line hidden
            this.Write("</param>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }}if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("    /// <returns>");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.ResultDescription, 1)));
            
            #line default
            #line hidden
            this.Write("</returns>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// <exception cref=\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("\">A server side error occurred.</exception>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("    [System.Obsolete]\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    public ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(!parameter.IsLast){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}}
            
            #line default
            #line hidden
            this.Write(")\n    {\n        return ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("System.Threading.CancellationToken.None);\n    }\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.HasSummary){
            
            #line default
            #line hidden
            this.Write("    /// <summary>");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.Summary, 1)));
            
            #line default
            #line hidden
            this.Write("</summary>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }foreach (var parameter in operation.Parameters){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(parameter.HasDescription){
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write("\">");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(parameter.Description, 1)));
            
            #line default
            #line hidden
            this.Write("</param>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }}
            
            #line default
            #line hidden
            this.Write("    /// <param name=\"cancellationToken\">A cancellation token that can be used by " +
                    "other objects or threads to receive notice of cancellation.</param>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.HasResultDescription){
            
            #line default
            #line hidden
            this.Write("    /// <returns>");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ConversionUtilities.ConvertCSharpDocBreaks(operation.ResultDescription, 1)));
            
            #line default
            #line hidden
            this.Write("</returns>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    /// <exception cref=\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("\">A server side error occurred.</exception>\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.IsDeprecated){
            
            #line default
            #line hidden
            this.Write("    [System.Obsolete]\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("    public async ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ResultType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.OperationNameUpper));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.Parameters){
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("System.Threading.CancellationToken cancellationToken)\n    {\n        var url_ = st" +
                    "ring.Format(\"{0}/{1}");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(operation.QueryParameters.Any()){
            
            #line default
            #line hidden
            this.Write("?");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\", BaseUrl, \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Path));
            
            #line default
            #line hidden
            this.Write("\");\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.PathParameters){
            
            #line default
            #line hidden
            this.Write("\n\n        if (");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(" == null)\n            throw new System.ArgumentNullException(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write("\");\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(parameter.IsDateArray){
            
            #line default
            #line hidden
            this.Write("\n        url_ = url_.Replace(\"{");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", System.Uri.EscapeDataString(string.Join(\",\", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(".Select(s_ => s_.ToString(\"s\", System.Globalization.CultureInfo.InvariantCulture)" +
                    "))));\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else if(parameter.IsDate){
            
            #line default
            #line hidden
            this.Write("\n        url_ = url_.Replace(\"{");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", System.Uri.EscapeDataString(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(".ToString(\"s\", System.Globalization.CultureInfo.InvariantCulture)));\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else if(parameter.IsArray){
            
            #line default
            #line hidden
            this.Write("\n        url_ = url_.Replace(\"{");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", System.Uri.EscapeDataString(string.Join(\",\", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(".Select(s_ => s_.ToString()))));\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("\n        url_ = url_.Replace(\"{");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("}\", System.Uri.EscapeDataString(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(".ToString()));\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.QueryParameters){
            
            #line default
            #line hidden
            this.Write("\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(!parameter.IsNullable){
            
            #line default
            #line hidden
            this.Write("\n        if (");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(" == null)\n            throw new System.ArgumentNullException(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write("\");\n        else\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("\n        if (");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(" != null)\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(parameter.IsDateArray){
            
            #line default
            #line hidden
            this.Write("\n            foreach(var item_ in ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(") { url_ += string.Format(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("={0}&\", System.Uri.EscapeDataString(item_.ToString(\"s\", System.Globalization.Cult" +
                    "ureInfo.InvariantCulture))); }\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else if(parameter.IsDate){
            
            #line default
            #line hidden
            this.Write("\n            url_ += string.Format(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("={0}&\", System.Uri.EscapeDataString(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(parameter.Type.EndsWith("?")){
            
            #line default
            #line hidden
            this.Write(".Value");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(".ToString(\"s\", System.Globalization.CultureInfo.InvariantCulture)));\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else if(parameter.IsArray){
            
            #line default
            #line hidden
            this.Write("\n            foreach(var item_ in ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(") { url_ += string.Format(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("={0}&\", System.Uri.EscapeDataString(item_.ToString())); }\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("\n            url_ += string.Format(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("={0}&\", System.Uri.EscapeDataString(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(parameter.Type.EndsWith("?")){
            
            #line default
            #line hidden
            this.Write(".Value");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(".ToString()));\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n                \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write("\n        var client_ = _httpClient;\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else if(Model.UseHttpClientCreationMethod){
            
            #line default
            #line hidden
            this.Write("\n        var client_ = await CreateHttpClientAsync(cancellationToken).ConfigureAw" +
                    "ait(false);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("\n        var client_ = new System.Net.Http.HttpClient();\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n        try\n        {\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(Model.UseHttpRequestMessageCreationMethod){
            
            #line default
            #line hidden
            this.Write("\n            using (var request_ = await CreateHttpRequestMessageAsync(cancellati" +
                    "onToken).ConfigureAwait(false))\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("\n            using (var request_ = new System.Net.Http.HttpRequestMessage())\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n            {\n                PrepareRequest(client_, ref url_);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var parameter in operation.HeaderParameters){
            
            #line default
            #line hidden
            this.Write("\n                request_.Headers.TryAddWithoutValidation(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(");\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(operation.HasContent){
            
            #line default
            #line hidden
            this.Write("\n                var content_ = new System.Net.Http.StringContent(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(operation.HasXmlBodyParameter){
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ContentParameter.VariableName));
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            this.Write("Newtonsoft.Json.JsonConvert.SerializeObject(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.ContentParameter.VariableName));
            
            #line default
            #line hidden
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.JsonConverters));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(");\n                content_.Headers.ContentType.MediaType = \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Consumes));
            
            #line default
            #line hidden
            this.Write("\";\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.HasFormParameters){
            
            #line default
            #line hidden
            this.Write("\n                var content_ = new System.Net.Http.MultipartFormDataContent();\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
    foreach(var parameter in operation.FormParameters){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(parameter.IsNullable){
            
            #line default
            #line hidden
            this.Write("\n                if (");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(" != null)\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("\n                if (");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(" == null)\n                    throw new System.ArgumentNullException(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write("\");\n                else\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(parameter.IsFile){
          if(parameter.IsArray){
            
            #line default
            #line hidden
            this.Write("\n                foreach(var item_ in ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(") { content_.Add(new System.Net.Http.StreamContent(item_.Data), \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\", item_.FileName ?? \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\"); }\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
        }else{
            
            #line default
            #line hidden
            this.Write("\n                    content_.Add(new System.Net.Http.StreamContent(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(".Data), \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\", ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(".FileName ?? \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\");\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
        }
        }else{
            
            #line default
            #line hidden
            this.Write("\n                    content_.Add(new System.Net.Http.StringContent(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.VariableName));
            
            #line default
            #line hidden
            this.Write(".ToString()), \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\");\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
    }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else if(!operation.IsGetOrDelete){
            
            #line default
            #line hidden
            this.Write("\n                var content_ = new System.Net.Http.StringContent(string.Empty);\n" +
                    "");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(!operation.IsGetOrDelete){
            
            #line default
            #line hidden
            this.Write("\n                request_.Content = content_;\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\n                request_.Method = new System.Net.Http.HttpMethod(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.HttpMethod.ToString().ToUpperInvariant()));
            
            #line default
            #line hidden
            this.Write("\");\n                request_.RequestUri = new System.Uri(url_, System.UriKind.Rel" +
                    "ativeOrAbsolute);\n                request_.Headers.Accept.Add(new System.Net.Htt" +
                    "p.Headers.MediaTypeWithQualityHeaderValue(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.Produces));
            
            #line default
            #line hidden
            this.Write(@"""));
                var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                try
                {
                    var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h => h.Key, h => h.Value);
                    foreach (var item in response_.Content.Headers)
                        headers_[item.Key] = item.Value;

                    ProcessResponse(client_, response_);
					
                    var status_ = ((int)response_.StatusCode).ToString();
");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
foreach(var response in operation.Responses){
            
            #line default
            #line hidden
            this.Write("\n                    if (status_ == \"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.StatusCode));
            
            #line default
            #line hidden
            this.Write("\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(response.IsFile && response.StatusCode == "200"){
            
            #line default
            #line hidden
            this.Write(" || status_ == \"206\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(") \n                    {\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(response.HasType){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(response.IsFile){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(response.IsSuccess){
            
            #line default
            #line hidden
            this.Write("\n                        var responseStream_ = await response_.Content.ReadAsStre" +
                    "amAsync().ConfigureAwait(false);\n                        var fileResponse_ = new" +
                    " FileResponse(status_, headers_, responseStream_, ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write("null");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            this.Write("client_");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(", response_); \n                        client_ = null; response_ = null; // respo" +
                    "nse and client are disposed by FileResponse\n                        return fileR" +
                    "esponse_;\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("\n                        var responseData_ = await response_.Content.ReadAsString" +
                    "Async().ConfigureAwait(false); \n                        throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.ExceptionDescription));
            
            #line default
            #line hidden
            this.Write("\", status_, responseData_, headers_, null);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("\n                        var responseData_ = await response_.Content.ReadAsString" +
                    "Async().ConfigureAwait(false); \n                        var result_ = default(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write("); \n                        try\n                        {\n                       " +
                    "     result_ = Newtonsoft.Json.JsonConvert.DeserializeObject<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write(">(responseData_");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.JsonConverters));
            
            #line default
            #line hidden
            this.Write(");                                \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(response.IsSuccess){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          if (Model.WrapSuccessResponses){
            
            #line default
            #line hidden
            this.Write("\n                            return new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ResponseClass));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.UnwrappedResultType));
            
            #line default
            #line hidden
            this.Write(">(status_, headers_, result_); \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }else{
            
            #line default
            #line hidden
            this.Write("\n                            return result_; \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }
            
            #line default
            #line hidden
            this.Write("\n                        } \n                        catch (System.Exception excep" +
                    "tion) \n                        {\n                            throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("(\"Could not deserialize the response body.\", status_, responseData_, headers_, ex" +
                    "ception);\n                        }\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("\n                    } \n                    catch (System.Exception exception) \n " +
                    "                   {\n                        throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("(\"Could not deserialize the response body.\", status_, responseData_, headers_, ex" +
                    "ception);\n                    }\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          if(response.InheritsExceptionSchema){
            
            #line default
            #line hidden
            this.Write("\n                    if (result_ == null)\n                        result_ = new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write("();\n                    result_.Data.Add(\"HttpStatus\", status_);\n                " +
                    "    result_.Data.Add(\"ResponseData\", responseData_);\n                    throw n" +
                    "ew ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write(">(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.ExceptionDescription));
            
            #line default
            #line hidden
            this.Write("\", status_, responseData_, headers_, result_, result_);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }else{
            
            #line default
            #line hidden
            this.Write("\n                    throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.Type));
            
            #line default
            #line hidden
            this.Write(">(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.ExceptionDescription));
            
            #line default
            #line hidden
            this.Write("\", status_, responseData_, headers_, result_, null);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(response.IsSuccess){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(operation.HasResultType){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          if (Model.WrapSuccessResponses){
            
            #line default
            #line hidden
            this.Write("\n                        return new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ResponseClass));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.UnwrappedResultType));
            
            #line default
            #line hidden
            this.Write(">(status_, headers_, default(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.UnwrappedResultType));
            
            #line default
            #line hidden
            this.Write(")); \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }else{
            
            #line default
            #line hidden
            this.Write("\n                        return default(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.UnwrappedResultType));
            
            #line default
            #line hidden
            this.Write(");\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          if (Model.WrapSuccessResponses){
            
            #line default
            #line hidden
            this.Write("\n                        return new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ResponseClass));
            
            #line default
            #line hidden
            this.Write("(status_, headers_); \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }else{
            
            #line default
            #line hidden
            this.Write("\n                        return;\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("\n                        var responseData_ = await response_.Content.ReadAsString" +
                    "Async().ConfigureAwait(false); \n                        throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(response.ExceptionDescription));
            
            #line default
            #line hidden
            this.Write("\", status_, responseData_, headers_, null);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n                    }\n                    else\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(operation.HasDefaultResponse){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  if(operation.DefaultResponse.HasType){
            
            #line default
            #line hidden
            this.Write("\n                    {\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(operation.DefaultResponse.IsFile){
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          if(operation.DefaultResponse.IsSuccess){
            
            #line default
            #line hidden
            this.Write("\n                        var responseStream_ = await response_.Content.ReadAsStre" +
                    "amAsync().ConfigureAwait(false);\n                        var fileResponse_ = new" +
                    " FileResponse(status_, headers_, responseStream_, ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write("null");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            this.Write("client_");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(", response_); \n                        client_ = null; response_ = null; // respo" +
                    "nse and client are disposed by FileResponse\n                        return fileR" +
                    "esponse_;\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }else{
            
            #line default
            #line hidden
            this.Write("\n                        var responseData_ = await response_.Content.ReadAsString" +
                    "Async().ConfigureAwait(false); \n                        throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.ExceptionDescription));
            
            #line default
            #line hidden
            this.Write("\", status_, responseData_, headers_, null);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else{
            
            #line default
            #line hidden
            this.Write("\n                        var responseData_ = await response_.Content.ReadAsString" +
                    "Async().ConfigureAwait(false); \n                        var result_ = default(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.Type));
            
            #line default
            #line hidden
            this.Write("); \n                        try\n                        {\n                       " +
                    "     result_ = Newtonsoft.Json.JsonConvert.DeserializeObject<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.Type));
            
            #line default
            #line hidden
            this.Write(">(responseData_");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.JsonConverters));
            
            #line default
            #line hidden
            this.Write(");\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          if(operation.HasOnlyDefaultResponse){
            
            #line default
            #line hidden
            this.Write("\n                            if (status_.Length == 3 && status_.StartsWith(\"2\"))\n" +
                    "");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
              if (Model.WrapSuccessResponses){
            
            #line default
            #line hidden
            this.Write("\n                                return new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ResponseClass));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.UnwrappedResultType));
            
            #line default
            #line hidden
            this.Write(">(status_, headers_, result_); \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
              }else{
            
            #line default
            #line hidden
            this.Write("\n                                return result_; \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
              }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }
            
            #line default
            #line hidden
            this.Write("\n                        } \n                        catch (System.Exception excep" +
                    "tion_) \n                        {\n                            throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("(\"Could not deserialize the response body.\", status_, responseData_, headers_, ex" +
                    "ception_);\n                        }\n\n                        throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.Type));
            
            #line default
            #line hidden
            this.Write(">(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.ExceptionDescription));
            
            #line default
            #line hidden
            this.Write("\", status_, responseData_, headers_, result_, null);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n                    }\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }else{
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(operation.HasSuccessResponse){
            
            #line default
            #line hidden
            this.Write("\n                    var responseData_ = await response_.Content.ReadAsStringAsyn" +
                    "c().ConfigureAwait(false); \n                    throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("(\"");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.DefaultResponse.ExceptionDescription));
            
            #line default
            #line hidden
            this.Write("\", status_, responseData_, headers_, null);\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
  }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}else{
            
            #line default
            #line hidden
            this.Write("\n                    if (status_ != \"200\" && status_ != \"204\")\n                  " +
                    "  {\n                        var responseData_ = await response_.Content.ReadAsSt" +
                    "ringAsync().ConfigureAwait(false); \n                        throw new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ExceptionClass));
            
            #line default
            #line hidden
            this.Write("(\"The HTTP status code of the response was not expected (\" + (int)response_.Statu" +
                    "sCode + \").\", status_, responseData_, headers_, null);\n                    }\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      if(operation.HasResultType){
            
            #line default
            #line hidden
            this.Write("\n        \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          if (Model.WrapSuccessResponses && operation.UnwrappedResultType != "FileResponse"){
            
            #line default
            #line hidden
            this.Write("\n                    return new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ResponseClass));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.UnwrappedResultType));
            
            #line default
            #line hidden
            this.Write(">(status_, headers_, default(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.UnwrappedResultType));
            
            #line default
            #line hidden
            this.Write(")); \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }else{
            
            #line default
            #line hidden
            this.Write("\n                    return default(");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(operation.UnwrappedResultType));
            
            #line default
            #line hidden
            this.Write(");\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
          }
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }else if(Model.WrapSuccessResponses){
            
            #line default
            #line hidden
            this.Write("\n\n                    return new ");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.ResponseClass));
            
            #line default
            #line hidden
            this.Write("(status_, headers_); \n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
      }
            
            #line default
            #line hidden
            this.Write("\n                }\n                finally\n                {\n                    " +
                    "if (response_ != null)\n                        response_.Dispose();\n            " +
                    "    }\n            }\n        }\n        finally\n        {\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
if(!Model.InjectHttpClient){
            
            #line default
            #line hidden
            this.Write("\n            if (client_ != null)\n                client_.Dispose();\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n        }\n    }\n\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n}\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\n");
            
            #line 1 "C:\Data\Projects\NSwag\src\NSwag.CodeGeneration.CSharp\Templates\ClientTemplate.tt"
}
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    internal class ClientTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
