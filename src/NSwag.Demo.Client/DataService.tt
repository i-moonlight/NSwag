<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="$(SolutionDir)\NSwag.AssemblyLoader\bin\Debug\NJsonSchema.dll" #>
<#@ assembly name="$(SolutionDir)\NSwag.AssemblyLoader\bin\Debug\NJsonSchema.CodeGeneration.dll" #>
<#@ assembly name="$(SolutionDir)\NSwag.AssemblyLoader\bin\Debug\NSwag.Core.dll" #>
<#@ assembly name="$(SolutionDir)\NSwag.AssemblyLoader\bin\Debug\NSwag.CodeGeneration.dll" #>
<#@ assembly name="$(SolutionDir)\NSwag.AssemblyLoader\bin\Debug\NSwag.AssemblyLoader.dll" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="Microsoft.CSharp" #>
<#@ import namespace="NSwag.CodeGeneration.SwaggerGenerators.WebApi" #>
<#@ import namespace="NSwag.CodeGeneration.CodeGenerators.CSharp" #>
<#@ output extension=".cs" #>
<#
    // CONFIGURATION
    var assemblyPath = @"../../NSwag.Demo.Web/bin/NSwag.Demo.Web.dll";
    var controllerClass = "NSwag.Demo.Web.Controllers.PersonsController";
    var defaultUrlTemplate = "api/{controller}/{action}/{id}";
    // -------------

    var generator = new WebApiAssemblyToSwaggerGenerator(new WebApiAssemblyToSwaggerGeneratorSettings
    {
        AssemblyPaths = new [] { Path.GetFullPath(Path.GetDirectoryName(Host.TemplateFile) + assemblyPath) }, 
        DefaultUrlTemplate = defaultUrlTemplate, 
        
    });
    var service = generator.GenerateForControllers(new [] { controllerClass });

    // -------------

    var provider = new CSharpCodeProvider();
    var settings = new SwaggerToCSharpClientGeneratorSettings
    {
        ClassName = provider.CreateEscapedIdentifier(Path.GetFileNameWithoutExtension(Host.TemplateFile)),
        GenerateClientInterfaces = true
        
    };
    settings.CSharpGeneratorSettings.Namespace = Host.ResolveParameterValue("directiveId", "namespaceDirectiveProcessor", "namespaceHint");
    var clientGenerator = new SwaggerToCSharpClientGenerator(service, settings);
    var code = clientGenerator.GenerateFile();
#>
<#= code #>