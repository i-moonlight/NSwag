<#@ template visibility="internal" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="NJsonSchema" #>
<#@ import namespace="NJsonSchema.CodeGeneration" #>
/* tslint: disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v<#=SwaggerDocument.ToolchainVersion#> (NJsonSchema v<#=JsonSchema4.ToolchainVersion#>) (http://NSwag.org)
// </auto-generated>
//----------------------

<#=Model.ExtensionCodeBefore#>
<#if(Model.IsAngular2){#>

import 'rxjs/Rx'; 
import {Observable} from 'rxjs/Observable';
import {Injectable, Inject, Optional, OpaqueToken} from '@angular/core';
import {Http, Headers, Response, RequestOptionsArgs} from '@angular/http';
<#}#>
<#if(Model.IsAurelia){#>

import { inject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-fetch-client';
<#}#>

<#if(Model.HasModuleName){#>
module <#=Model.ModuleName#> {
<#}
  if(Model.HasNamespace){#>
namespace <#=Model.Namespace#> {
<#}#>
<#if(Model.IsAngular2){#>
export const API_BASE_URL = new OpaqueToken('API_BASE_URL');

<#}#>
<#=Model.Clients#>

<#=Model.Types#>

<#if(Model.RequiresFileParameterInterface){#>
export interface FileParameter
{
    data: any;
    fileName: string;
}
<#}#>

<#=Model.ExtensionCodeAfter#>
<#if(Model.HasNamespace){#>
}
<#}
  if(Model.HasModuleName){#>
}
<#}#>