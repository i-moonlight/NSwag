<UserControl x:Class="NSwagStudio.Views.CodeGenerators.SwaggerToCSharpClientGeneratorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:MyToolkit.Converters;assembly=MyToolkit.Extended"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:views="clr-namespace:NSwagStudio.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:codeGenerators="clr-namespace:NSwagStudio.ViewModels.CodeGenerators"
             xmlns:controls="clr-namespace:NSwagStudio.Controls"
             xmlns:converters1="clr-namespace:NSwagStudio.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800">

    <UserControl.Resources>
        <codeGenerators:SwaggerToCSharpClientGeneratorViewModel x:Key="ViewModel" />
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
        <converters:NotConverter x:Key="NotConverter" />
        <converters1:NumberAdditionConverter x:Key="NumberAdditionConverter" />
        <converters1:StringArrayConverter x:Key="StringArrayConverter" />
    </UserControl.Resources>

    <TabControl TabStripPlacement="Left" Margin="8" Name="TabControl" DataContext="{StaticResource ViewModel}">
        <TabItem Header="Settings" HeaderTemplate="{StaticResource RotatedTabItem}">
            <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Visible" 
                          HorizontalScrollBarVisibility="Hidden"
                          IsEnabled="{Binding IsLoading, Converter={StaticResource NotConverter}}">
                <StackPanel Margin="8,8,8,0" Width="{Binding ElementName=ScrollViewer, Path=ActualWidth, Converter={StaticResource NumberAdditionConverter}, ConverterParameter=-32}">
                    <TextBlock Text="CSharp Client Settings" FontSize="15" FontWeight="Bold" Margin="0,0,0,12" />

                    <TextBlock Text="Namespace" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBox Text="{Binding Command.Namespace, Mode=TwoWay}" Margin="0,0,0,12" />

                    <CheckBox IsChecked="{Binding Command.GenerateContractsOutput, Mode=TwoWay}" 
                                  Content="Generate contracts output" Margin="0,0,0,6" />
                    <StackPanel Visibility="{Binding Command.GenerateContractsOutput, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock Text="Contracts Namespace" FontWeight="Bold" Margin="0,0,0,6" />
                        <TextBox Text="{Binding Command.ContractsNamespace, Mode=TwoWay}" Margin="0,0,0,12" />
                    </StackPanel>

                    <TextBlock Text="Additional Namespace Usages (comma separated)" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBox Text="{Binding AdditionalNamespaceUsages, Mode=TwoWay}" Margin="0,0,0,12" />

                    <TextBlock Text="Custom Json.NET converter types (optional, comma separated)" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBox Text="{Binding Command.JsonConverters, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" Margin="0,0,0,12" />

                    <GroupBox Header="Client" Margin="0,0,0,12">
                        <StackPanel Margin="4,8,4,-8">
                            <CheckBox IsChecked="{Binding Command.GenerateClientClasses, Mode=TwoWay}" 
                                      Content="Generate Client Classes" Margin="0,0,0,12" />

                            <StackPanel Visibility="{Binding Command.GenerateClientClasses, Converter={StaticResource VisibilityConverter}}">
                                <TextBlock Text="Class Name" FontWeight="Bold" Margin="0,0,0,6" />
                                <TextBox Text="{Binding Command.ClassName, Mode=TwoWay}" Margin="0,0,0,12" />

                                <TextBlock Text="Base Class Name (optional)" FontWeight="Bold" Margin="0,0,0,6" />
                                <TextBox Text="{Binding Command.ClientBaseClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,12" />

                                <StackPanel Visibility="{Binding Command.ClientBaseClass, Converter={StaticResource VisibilityConverter}}">
                                    <CheckBox IsChecked="{Binding Command.UseHttpClientCreationMethod, Mode=TwoWay}" Margin="0,0,0,12">
                                        <TextBlock Text="Call the CreateHttpClientAsync method on the client base class to create a new HttpClient instance" TextWrapping="Wrap" />
                                    </CheckBox>

                                    <CheckBox IsChecked="{Binding Command.UseHttpRequestMessageCreationMethod, Mode=TwoWay}" Margin="0,0,0,12">
                                        <TextBlock Text="Call the CreateHttpRequestMessageAsync method on the client base class to create a new HttpRequestMessage instance" TextWrapping="Wrap" />
                                    </CheckBox>

                                    <TextBlock Text="Configuration Class Name (passed to base class ctor, optional)" FontWeight="Bold" Margin="0,0,0,6" />
                                    <TextBox Text="{Binding Command.ConfigurationClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="0,0,0,12" />
                                </StackPanel>

                                <TextBlock Margin="0,0,0,6" TextWrapping="Wrap">
                                        <Run Text="Operation Generation Mode" FontWeight="Bold" />
                                        <LineBreak />
                                        The {controller} placeholder of the Class Name is replaced by generated client name (depends on the OperationGenerationMode strategy).
                                </TextBlock>
                                <ComboBox SelectedItem="{Binding Command.OperationGenerationMode, Mode=TwoWay}" 
                                              ItemsSource="{Binding OperationGenerationModes}" Margin="0,0,0,12" />

                                <CheckBox IsChecked="{Binding Command.GenerateClientInterfaces, Mode=TwoWay}" 
                                              Content="Generate Client Interfaces" Margin="0,0,0,12" />
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="DTO Classes" Margin="0,0,0,12">
                        <StackPanel Margin="4,8,4,-8">
                            <CheckBox IsChecked="{Binding Command.RequiredPropertiesMustBeDefined, Mode=TwoWay}" Margin="0,0,0,12">
                                <TextBlock Text="Required properties must be defined in JSON (sets Required.Always when the property is required)" TextWrapping="Wrap" />
                            </CheckBox>

                            <TextBlock Text="Date Time Type" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.DateTimeType, Mode=TwoWay}" Margin="0,0,0,12" />

                            <TextBlock Text="Generic Array Type" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.ArrayType, Mode=TwoWay}" Margin="0,0,0,12" />

                            <TextBlock Text="Generic Dictionary Type" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.DictionaryType, Mode=TwoWay}" Margin="0,0,0,12" />

                            <CheckBox IsChecked="{Binding Command.GenerateDtoTypes, Mode=TwoWay}" Margin="0,0,0,12">
                                <TextBlock Text="Generate DTO Types (e.g. request and response classes)" TextWrapping="Wrap" />
                            </CheckBox>

                            <CheckBox IsChecked="{Binding Command.GenerateDefaultValues, Mode=TwoWay}" Margin="0,0,0,12">
                                <TextBlock Text="Generate default values for properties (if default value is specified)" TextWrapping="Wrap" />
                            </CheckBox>

                            <StackPanel Visibility="{Binding Command.GenerateDtoTypes, Converter={StaticResource VisibilityConverter}}">
                                <TextBlock Text="Class Style" FontWeight="Bold" Margin="0,0,0,6" />
                                <ComboBox SelectedItem="{Binding Command.ClassStyle, Mode=TwoWay}" 
                                              ItemsSource="{Binding ClassStyles}" Margin="0,0,0,12" />
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Swagger Information" Margin="0,0,0,12">
                        <StackPanel Margin="4,8,4,-8">
                            <TextBlock Text="Service host (optional)" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.ServiceHost, Mode=TwoWay}" Margin="0,0,0,12" />

                            <TextBlock Text="Service schemes (optional, 'http', 'https', 'ws', 'wss')" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.ServiceSchemes, Mode=TwoWay, Converter={StaticResource StringArrayConverter}}" Margin="0,0,0,12" />
                        </StackPanel>
                    </GroupBox>

                    <TextBlock Text="Output file path (empty: no file output)" FontWeight="Bold" Margin="0,0,0,6" />
                    <controls:FileSavePicker DefaultExtension=".cs" Filter="CSharp Files (.cs)|*.cs"
                                             FilePath="{Binding Command.OutputFilePath, Mode=TwoWay}" 
                                             Margin="0,0,0,12" />

                    <StackPanel Visibility="{Binding Command.GenerateContractsOutput, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock Text="Contracts output file path (empty: single output file output)" FontWeight="Bold" Margin="0,0,0,6" />
                        <controls:FileSavePicker DefaultExtension=".cs" Filter="CSharp Files (.cs)|*.cs"
                                                 FilePath="{Binding Command.ContractsOutputFilePath, Mode=TwoWay}" 
                                                 Margin="0,0,0,12" />
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Output" HeaderTemplate="{StaticResource RotatedTabItem}">
            <Border Margin="-2">
                <avalonedit:TextEditor Background="GhostWhite" FontFamily="Consolas" IsReadOnly="True" ShowLineNumbers="True"
                                   SyntaxHighlighting="C#" FontSize="10pt" Padding="8">
                    <i:Interaction.Behaviors>
                        <views:AvalonEditBehavior Text="{Binding ClientCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </i:Interaction.Behaviors>
                </avalonedit:TextEditor>
            </Border>
        </TabItem>
    </TabControl>
</UserControl>
