<UserControl x:Class="NSwagStudio.Views.CodeGenerators.SwaggerToCSharpControllerGeneratorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:MyToolkit.Converters;assembly=MyToolkit.Extended"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:views="clr-namespace:NSwagStudio.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:codeGenerators="clr-namespace:NSwagStudio.ViewModels.CodeGenerators"
             xmlns:controls="clr-namespace:NSwagStudio.Controls"
             xmlns:converters1="clr-namespace:NSwagStudio.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="800">

    <UserControl.Resources>
        <codeGenerators:SwaggerToCSharpControllerGeneratorViewModel x:Key="ViewModel" />
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
        <converters:NotConverter x:Key="NotConverter" />
        <converters1:NumberAdditionConverter x:Key="NumberAdditionConverter" />
    </UserControl.Resources>

    <TabControl TabStripPlacement="Left" Margin="8" Name="TabControl" DataContext="{StaticResource ViewModel}">
        <TabItem Header="Settings" HeaderTemplate="{StaticResource RotatedTabItem}">
            <ScrollViewer x:Name="ScrollViewer" VerticalScrollBarVisibility="Visible" 
                          HorizontalScrollBarVisibility="Hidden"
                          IsEnabled="{Binding IsLoading, Converter={StaticResource NotConverter}}">
                <StackPanel Margin="8,8,8,0" Width="{Binding ElementName=ScrollViewer, Path=ActualWidth, Converter={StaticResource NumberAdditionConverter}, ConverterParameter=-32}">
                    <TextBlock Text="CSharp Controller Settings" FontSize="15" FontWeight="Bold" Margin="0,0,0,12" />

                    <TextBlock Text="Namespace" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBox Text="{Binding Command.Namespace, Mode=TwoWay}" Margin="0,0,0,12" />

                    <GroupBox Header="Web API Controller" Margin="0,0,0,12">
                        <StackPanel Margin="4,8,4,-8">
                            <TextBlock Text="Controller Class Name" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.ClassName, Mode=TwoWay}" Margin="0,0,0,12" />

                            <TextBlock Text="Controller Base Class Name (optional)" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.ControllerBaseClass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,12" />

                            <TextBlock Margin="0,0,0,6" TextWrapping="Wrap">
                                    <Run Text="Operation Generation Mode" FontWeight="Bold" />
                                    <LineBreak />
                                    The {controller} placeholder of the Class Name is replaced by generated client name (depends on the OperationGenerationMode strategy).
                            </TextBlock>
                            <ComboBox SelectedItem="{Binding Command.OperationGenerationMode, Mode=TwoWay}" 
                                      ItemsSource="{Binding OperationGenerationModes}" Margin="0,0,0,12" />
                        </StackPanel>
                    </GroupBox>

                    <TextBlock Text="Additional Namespace Usages (comma separated)" FontWeight="Bold" Margin="0,0,0,6" />
                    <TextBox Text="{Binding AdditionalNamespaceUsages, Mode=TwoWay}" Margin="0,0,0,12" />

                    <GroupBox Header="Classes" Margin="0,0,0,12">
                        <StackPanel Margin="4,8,4,-8">
                            <CheckBox IsChecked="{Binding Command.RequiredPropertiesMustBeDefined, Mode=TwoWay}" Margin="0,0,0,12">
                                <TextBlock Text="Required properties must be defined in JSON (sets Required.Always when the property is required)" TextWrapping="Wrap" />
                            </CheckBox>

                            <TextBlock Text="Date Time Type" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.DateTimeType, Mode=TwoWay}" Margin="0,0,0,12" />

                            <TextBlock Text="Generic Array Type" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.ArrayType, Mode=TwoWay}" Margin="0,0,0,12" />

                            <TextBlock Text="Generic Dictionary Type" FontWeight="Bold" Margin="0,0,0,6" />
                            <TextBox Text="{Binding Command.DictionaryType, Mode=TwoWay}" Margin="0,0,0,12" />

                            <TextBlock Text="Class Style" FontWeight="Bold" Margin="0,0,0,6" />
                            <ComboBox SelectedItem="{Binding Command.ClassStyle, Mode=TwoWay}" 
                                          ItemsSource="{Binding ClassStyles}" Margin="0,0,0,12" />
                        </StackPanel>
                    </GroupBox>

                    <TextBlock Text="Output file path (empty: no file output)" FontWeight="Bold" Margin="0,0,0,6" />
                    <controls:FileSavePicker DefaultExtension=".cs" Filter="CSharp Files (.cs)|*.cs"
                                                 FilePath="{Binding Command.OutputFilePath, Mode=TwoWay}" 
                                                 Margin="0,0,0,12" />
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Output" HeaderTemplate="{StaticResource RotatedTabItem}">
            <Border Margin="-2">
                <avalonedit:TextEditor Background="GhostWhite" FontFamily="Consolas" IsReadOnly="True" ShowLineNumbers="True"
                                   SyntaxHighlighting="C#" FontSize="10pt" Padding="8">
                    <i:Interaction.Behaviors>
                        <views:AvalonEditBehavior Text="{Binding ClientCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </i:Interaction.Behaviors>
                </avalonedit:TextEditor>
            </Border>
        </TabItem>
    </TabControl>
</UserControl>
